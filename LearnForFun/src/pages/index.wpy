<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }
  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>
  <view class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ nickName }}</view>
  </view> 
  <van-nav-bar
      title="我的群聊"
      left-text="创建群聊"
      right-text="加入群聊"
      bind:click-left="gotoCreate"
      bind:click-right="gotoJoin"
  />
  <!-- 这个页面为群组聊天页面首页，点击tarbar第一个“群聊”即可看到此页面 -->
  <!-- 群组列表 注意传参 "自建群组/官方群组"使用三元表达式看groupId的开头是什么字母-->
    <repeat for="{{grouplist}}" item="item">
        <van-cell title="{{item.groupName}}" value="自建群组" size="large" label="{{item.groupIntrod}}" data-groupid="{{item.groupId}}" is-link @tap="enterGroupchat"/>
    </repeat>
   
  <!-- <view class="container">

    
    <panel>
      <view class="title" slot="title">测试并发网络请求</view>
      <view>返回结果: <text>{{netrst}}</text></view>
      <button @tap="request" size="mini"> 点我发起10个请求 </button>
    </panel>


  </view>  -->
</template>

<script>
  import wepy from 'wepy'
  import Panel from '@/components/panel' // alias example
  import Counter from 'counter' // alias example
  import List from '../components/list' // aliasFields example
  import moduleA from 'module-a' // aliasFields ignore module example
  import Group from '../components/group'
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/test'
  import wxCommon from '../mixins/wxCommon'

  console.log('moduleA ignored: ', moduleA) // => moduleA ignored: {}


  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '趣学'
    }
    components = {
      panel: Panel,
      counter1: Counter,
      counter2: Counter,
      list: List,
      group: Group,
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      mynum: 20,
      avatarUrl: '',
      nickName: '',   // 微信昵称
      schoolNum:0,    // 学号
      realName:'',    // 真实姓名
      openid:'',      // 不能提供真实的微信号所以只能用openid
      grouplist:[     // 假数据，先搞4个假群
        {
          courseCode: '',
          groupId:'123456',   // O 开头为官方群组，I开头为自创群组
          groupIntrod:'',
          groupName:'测试群组1',
          groupOwnerId:'17373384',
          groupOwnerName:'王珊珊'
        },
        {
          courseCode: '',
          groupId:'123456',   // O 开头为官方群组，I开头为自创群组
          groupIntrod:'',
          groupName:'测试群组2',
          groupOwnerId:'17373384',
          groupOwnerName:'王珊珊'
        },
        {
          courseCode: '',
          groupId:'123456',   // O 开头为官方群组，I开头为自创群组
          groupIntrod:'',
          groupName:'测试群组3',
          groupOwnerId:'17373384',
          groupOwnerName:'王珊珊'
        },
        {
          courseCode: '',
          groupId:'123456',   // O 开头为官方群组，I开头为自创群组
          groupIntrod:'',
          groupName:'测试群组4',
          groupOwnerId:'17373384',
          groupOwnerName:'王珊珊'
        },
        {
          courseCode: '',
          groupId:'123456',   // O 开头为官方群组，I开头为自创群组
          groupIntrod:'',
          groupName:'测试群组5',
          groupOwnerId:'17373384',
          groupOwnerName:'王珊珊'
        },
        {
          courseCode: '',
          groupId:'123456',   // O 开头为官方群组，I开头为自创群组
          groupIntrod:'',
          groupName:'测试群组5',
          groupOwnerId:'17373384',
          groupOwnerName:'王珊珊'
        }
      ],
      normalTitle: '原始标题',
      setTimeoutTitle: '标题三秒后会被修改',
      count: 0,
      netrst: '',
    }

    computed = {
      now () {
        return +new Date()
      }
    }
    mixins = [wxCommon]
    // Tap绑定的触发事件method
    methods = {
      plus () {
        this.mynum++
      },
      toast () {
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })

        promise.then((d) => {
          console.log('toast done')
        })
      },
      tap () {
        console.log('do noting from ' + this.$name)
      },
      communicate () {
        console.log(this.$name + ' tap')

        this.$invoke('counter2', 'minus', 45, 6)
        this.$invoke('counter1', 'plus', 45, 6)

        this.$broadcast('index-broadcast', 1, 3, 4)
      },
      request () {
        let self = this
        let i = 10
        let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ==']
        while (i--) {
          wepy.request({
            url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
            success: function (d) {
              self.netrst += d.data + '.'
              self.$apply()
            }
          })
        }
      },
      enterGroupchat(e){ //点击进入特定群组，传参数为群号, 参数要全小写不能驼峰命名
        console.log('即将进入群组，传进来的参数：'+e.currentTarget.dataset.groupid)
        let enterGroupId = e.currentTarget.dataset.groupid
        wx.navigateTo({
            url: '/pages/groupchat?groupId='+enterGroupId, // ?id=2020&time=20200309
            events: {
              // 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据
              acceptDataFromOpenedPage: function(data) {
                console.log(data)
              },
              someEvent: function(data) {
                console.log(data)
              }
            },
            success: function(res) {
              // 通过eventChannel向被打开页面传送数据
              res.eventChannel.emit('acceptDataFromOpenerPage', { data: 'test' })
            }
        })
      }
      
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }
    // 获取该人加入的所有群组列表
    getGroupList(){
        let that = this
        that.userRequest(
          '/api/user/group/'+that.schoolNum ,'get',
          {
            
          }, function(res) {  // 返回的是一个list? 里面全是Group实例
            if(res.data.length == 0) { // 是官方群组 .groupId[0]=='O'
              console.log("尚未加入任何群组")
            } else {
              let grouplist = res.data
              console.log(grouplist)
              // TODO:真实有群之后，把grouplist赋值为该函数的返回值
              that.grouplist = res.data
              that.$apply()
            }      
          }
        )
      }

    
    gotoCreate() {
      console.log("点击了创建群聊")
      wx.navigateTo({
            url: '/pages/createGroup', // 不需要参数
        })
    }
    gotoJoin() {
      console.log("点击了加入群聊")
      wx.showToast({ title: '点击按钮', icon: 'none' });
    }
    
    
    async onLoad() {
      let self = this
      let that = this
      let userInfo = wepy.getStorageSync("userInfo")
      that.avatarUrl = userInfo.avatarUrl
      that.nickName = userInfo.nickName
      let schoolNum = wepy.getStorageSync("schoolNum")
      that.schoolNum = schoolNum

      // 这里要补充：进到该页面时要发送请求获取已经加入的群
      that.getGroupList();  // 调用函数时要写 that. 否则可能会报错 not defined
      
    }

    onShow(){
      let that = this
      that.onLoad();
    }

  }
</script>
