<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>
  <view class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ nickName }}</view>
  </view> 
  <!-- 这个页面为群组聊天页面首页，点击tarbar第一个“群聊”即可看到此页面 -->
  <van-cell title="群聊名字（课程）" value="官方群组" size="large" label="描述信息：最近一条消息" is-link @tap="enterGroupchat"/>
  <van-cell title="群聊名字课程" value="自建群组" size="large" label="描述信息：最近一条消息" is-link @tap="enterGroupchat"/>
  <van-cell title="群聊名字（课程）" value="官方群组" size="large" label="描述信息：最近一条消息" is-link @tap="enterGroupchat"/>
  <van-cell title="群聊名字课程" value="自建群组" size="large" label="描述信息：最近一条消息" is-link @tap="enterGroupchat"/>
<!--   
  <repeat for="{{chats}}" item="item">
      <view style="font-size: 20rpx;color: #ababab">{{item.time}}</view>
      <view style="font-size: 25rpx;padding-bottom: 20rpx">{{item.text}}</view>
  </repeat> -->

<!--   
  <view class="container">

    
    <panel>
      <view class="title" slot="title">测试并发网络请求</view>
      <view>返回结果: <text>{{netrst}}</text></view>
      <button @tap="request" size="mini"> 点我发起10个请求 </button>
    </panel>


  </view> -->
</template>

<script>
  import wepy from 'wepy'
  import Panel from '@/components/panel' // alias example
  import Counter from 'counter' // alias example
  import List from '../components/list' // aliasFields example
  import moduleA from 'module-a' // aliasFields ignore module example
  import Group from '../components/group'
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/test'

  console.log('moduleA ignored: ', moduleA) // => moduleA ignored: {}


  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '趣学'
    }
    components = {
      panel: Panel,
      counter1: Counter,
      counter2: Counter,
      list: List,
      group: Group,
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      mynum: 20,
      avatarUrl: '',
      nickName: '',   // 微信昵称
      schoolNum:0,    // 学号
      realName:'',    // 真实姓名
      openid:'',      // 不能提供真实的微信号所以只能用openid

      normalTitle: '原始标题',
      setTimeoutTitle: '标题三秒后会被修改',
      count: 0,
      netrst: '',
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      plus () {
        this.mynum++
      },
      toast () {
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })

        promise.then((d) => {
          console.log('toast done')
        })
      },
      tap () {
        console.log('do noting from ' + this.$name)
      },
      communicate () {
        console.log(this.$name + ' tap')

        this.$invoke('counter2', 'minus', 45, 6)
        this.$invoke('counter1', 'plus', 45, 6)

        this.$broadcast('index-broadcast', 1, 3, 4)
      },
      request () {
        let self = this
        let i = 10
        let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ==']
        while (i--) {
          wepy.request({
            url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
            success: function (d) {
              self.netrst += d.data + '.'
              self.$apply()
            }
          })
        }
      },
      enterGroupchat(groupId){ //点击进入特定群组，传参数为群号
        wx.navigateTo({
            url: '/pages/groupchat?groupId=123456', // ?id=2020&time=20200309
            events: {
              // 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据
              acceptDataFromOpenedPage: function(data) {
                console.log(data)
              },
              someEvent: function(data) {
                console.log(data)
              }
            },
            success: function(res) {
              // 通过eventChannel向被打开页面传送数据
              res.eventChannel.emit('acceptDataFromOpenerPage', { data: 'test' })
            }
        })
      }
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    async onLoad() {
      let self = this
      let that = this
      let userInfo = wepy.getStorageSync("userInfo")
      self.avatarUrl = userInfo.avatarUrl
      self.nickName = userInfo.nickName

      // 这里要补充：进到该页面时要发送请求获取已经加入的群

      
    }

  }
</script>
