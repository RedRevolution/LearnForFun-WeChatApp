<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
.userbox {
    padding-bottom: 30rpx;
    min-height: 410rpx;
}
.userinfo {
    padding-bottom: 20rpx;
    text-align: center;
}
.useravatar {
    text-align: center;
    height: 240rpx;
    clear: both;
    padding-top: 80rpx;
}
.useravatar image {
    height: 152rpx;
    width: 152rpx;
    border-radius: 152rpx;
    border: 12rpx solid #FFF;
    margin-bottom: 20rpx;
}
.userlogin {
    height: 50rpx;
    line-height: 50rpx;
    font-size: 30rpx;
    font-weight: 300;
}
.listbox {
    padding: 0;
}

.userlogout{
  align-items: center;
}
</style>
<template>

  <view style = "background:">
    <view class ="userbox">
    <view class = "userinfo">
      <block wx:if="{{nickName}}">
        <view class="header_content">
            <van-image
              round
              width="10rem"
              height="10rem"
              src="{{ avatarUrl }}"
            />
          <view class="nickName">微信名：{{ nickName }}</view>
          <view>学号：{{schoolNum}}</view>
        </view>
      </block>
      <block wx:else>
        <view class="useravatar">
          <image src="/images/user_select.png" mode="aspectFill"></image>
          <view class="userlogin"><navigator url="/pages/userlogin">立即登录</navigator></view>
        </view>
      </block>
    </view>
    </view>
  </view>

  <view class="listbox">
    <view class = "container">
      <view class="userlogin">
        <navigator url="/pages/bindschoolnum"><van-button plain type="info">跳转到绑定学号界面</van-button></navigator>
      </view>
    </view>
  </view>

  <van-button plain type="info">退出登录</van-button>
  <van-button plain type="info" @tap="refresh">刷新</van-button>


</template>

<script>
// 页面逻辑代码部分
import wepy from 'wepy'
import api from '@/api/api'
export default class Me extends wepy.page {
  config = {
    navigationBarTitleText: '我的'
  }
  data = {
    avatarUrl: '',
    nickName: '',
    schoolNum:0,
    realName:'',    // 真实姓名
    openid:'',      // 不能提供真实的微信号所以只能用openid
    wordData: '这个是‘我的’页面'
  }

  methods = {
    
  }

  async onLoad() {
      let that = this
      let userInfo = wepy.getStorageSync("userInfo")
      that.avatarUrl = userInfo.avatarUrl
      that.nickName = userInfo.nickName
      // this.getUserInfo()  
  }

  refresh(){
      let that = this
      let userInfo = wepy.getStorageSync("userInfo")
      that.avatarUrl = userInfo.avatarUrl
      that.nickName = userInfo.nickName
      wepy.switchTab({
        url: '/pages/me'
      })
  }

  // async getUserInfo(phone, code) {
  //     let that = this
  //     let userSpecialInfo = wepy.getStorageSync("userSpecialInfo") || {}
  //     let openId = userSpecialInfo.openid
  //     const json = await api.getUserInfo({
  //       query: {
  //         openId: openId
  //       }
  //     })

  //     if (json.data.code === 0) {
  //       this.bHideBind = (json.data.user != null && json.data.user.mobile.length > 0)
  //       that.$apply()
  //     } else {
  //       tip.error(json.data.msg)
  //     }
  //     that.showLoading = false
  //   }
}
</script>