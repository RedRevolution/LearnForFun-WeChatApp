<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
.userbox {
    padding-bottom: 30rpx;
    min-height: 410rpx;
}
.userinfo {
    padding-bottom: 20rpx;
    text-align: center;
}
.useravatar {
    text-align: center;
    height: 240rpx;
    clear: both;
    padding-top: 80rpx;
}
.useravatar image {
    height: 152rpx;
    width: 152rpx;
    border-radius: 152rpx;
    border: 12rpx solid #FFF;
    margin-bottom: 20rpx;
}
.userlogin {
    height: 50rpx;
    line-height: 50rpx;
    font-size: 30rpx;
    font-weight: 300;
}
.listbox {
    padding: 0;
}

.userlogout{
  align-items: center;
}
</style>
<template>

  <view style = "background:">
    <view class ="userbox">
    <view class = "userinfo">
      <block wx:if="{{nickName}}">
        <view class="header_content">
            <van-image
              round
              width="10rem"
              height="10rem"
              src="{{ avatarUrl }}"
            />
          <view class="nickName">微信名：{{ nickName }}</view>
          <view>学号：{{schoolNum}}</view>
          <view>姓名：{{realName}}</view>
        </view>
      </block>
      <block wx:else>
        <view class="useravatar">
          <image src="/images/user_select.png" mode="aspectFill"></image>
          <view class="userlogin"><navigator url="/pages/userlogin">登录后才可查看学号信息哦</navigator></view>
        </view>
      </block>
    </view>
    </view>
  </view>

  <view class="listbox">
      <view class = "container">
      <view class="userlogin">
        <navigator url="/pages/bindschoolnum"><van-button plain type="info">跳转到绑定学号界面</van-button></navigator>
      </view>
    </view>
      <view>
        <van-cell title="我的日程" is-link  link-type="navigateTo"
          url="/pages/schedule" />
      </view>
      <view>
        <van-cell title="关于" is-link  link-type="navigateTo"
              url="/pages/favorite" />
      </view>
      <view class = "container">
          <van-button plain type="info">退出登录</van-button>
      </view>

    </view>

</template>

<script>
// 页面逻辑代码部分
import wepy from 'wepy'
import api from '@/api/api'
import wxCommon from '../mixins/wxCommon'

export default class Me extends wepy.page {
  config = {
    navigationBarTitleText: '我的'
  }
  data = {
    avatarUrl: '',
    nickName: '',
    schoolNum:0,
    realName:'',    // 真实姓名
    openid:'',      // 不能提供真实的微信号所以只能用openid
    wordData: '这个是‘我的’页面'
  }
  mixins = [wxCommon]
  methods = {
    
  }

  async onLoad() {
      let that = this
      let userInfo = wepy.getStorageSync("userInfo")
      that.avatarUrl = userInfo.avatarUrl
      that.nickName = userInfo.nickName
      // this.getUserInfo()  

      // 这个部分是想
      wx.login({
      success: res => {
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
        console.log('测试能否获取到登录的code')
        console.log(res)
        console.log(res.code)
        that.userRequest(
            '/api/user/'+res.code ,'get', 
              {
                
              }, function(res) {
                    if(res.data.userId == 'unbound') {
                      wepy.showModal({
                            title: '提示',
                            content: '你还没有绑定学号哦～',
                            success (res) {
                                if (res.confirm) {
                                console.log('用户点击确定')
                                } else if (res.cancel) {
                                console.log('用户点击取消')
                                }
                            }
                      })
                      // 未绑定学号会返回 openid
                      wepy.setStorageSync("openid", res.data.openid)

                      wepy.navigateTo({
                          url:'/pages/bindschoolnum'  // 点按确定之后跳转
                      })

                    } else { // 这个人已经绑定过了，会返回一个完整的User实例，缓存userId, userName作为全局缓存->schoolNum, realName
                      wepy.setStorageSync("schoolNum", res.data.userId)
                      wepy.setStorageSync("realName", res.data.userName)
                      that.schoolNum = res.data.userId
                      that.realName = res.data.userName
                      // 无需提示，界面会显示这个学号和真实姓名
                    }
                    
                }
        )
        
      }
    })
  }

  onShow(){ // 每次点进来显示这个页面就相当于刷新一下，免得显示不了头像和昵称
      let that = this
      let userInfo = wepy.getStorageSync("userInfo")
      that.avatarUrl = userInfo.avatarUrl
      that.nickName = userInfo.nickName
      that.realName = wepy.getStorageSync('realName')
      that.schoolNum = wepy.getStorageSync('schoolNum')
  }

}
</script>