<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
.userbox {
    padding-bottom: 30rpx;
    min-height: 410rpx;
}
.userinfo {
    padding-bottom: 20rpx;
    text-align: center;
}
.useravatar {
    text-align: center;
    height: 240rpx;
    clear: both;
    padding-top: 80rpx;
}
.useravatar image {
    height: 152rpx;
    width: 152rpx;
    border-radius: 152rpx;
    border: 12rpx solid #FFF;
    margin-bottom: 20rpx;
}
.userlogin {
    height: 50rpx;
    line-height: 50rpx;
    font-size: 30rpx;
    font-weight: 300;
    color: white;
}
.listbox {
    padding: 0;
}

.userlogout{
  align-items: center;
}
</style>
<template>
    <van-field
        value="{{ message }}"
        label="姓名"
        type="textarea"
        required
        clearable
        placeholder="输入姓名"
        autosize
        @input="inputName"
    />
    <van-field
        value="{{ message }}"
        label="学号"
        type="textarea"
        required
        clearable
        placeholder="输入学号"
        autosize
        @input="inputNum"
    />
    <!-- <input placeholder="输入姓名" bindinput="inputName">
    <input placeholder="输入学号" bindinput="inputNum"> -->
    <button @tap="bind" class="button">绑定</button>
</template>

<script>
// 页面逻辑代码部分
import wepy from 'wepy'
import api from '@/api/api'
import wxCommon from '../mixins/wxCommon'

export default class Bind extends wepy.page {
  config = {
    navigationBarTitleText: '绑定学号'
  }
  data = {
    avatarUrl: '',
    nickName: '',   // 微信昵称
    schoolNum:0,    // 学号
    realName:'',    // 真实姓名
    openId:'',      // 不能提供真实的微信号所以只能用openid
    wordData: 'Welcome! 这个是绑定学号界面'
  }

  mixins = [wxCommon]
  
  methods = {
      inputName(e) {
        this.realName = e.detail  // 表单存名字
        console.log(e.detail)
        this.$apply()
      },
      //参与者号码
      inputNum(e) {
        this.schoolNum = e.detail // 表单存号码
        console.log(e.detail)
        this.$apply()
      },
      // 绑定学号函数
      bind(){
          const that = this 
          if(this.checkNum(this.schoolNum)){ // url后面要加微信号，数据左侧是数据库字段，右侧是本地js的data
              that.userRequest(
                  '/api/user','post',   // 还没有加微信号
                  {
                      openId: that.openId, // openid应当是userlogin授权之后获取的，一旦加载这个页面openid变量就有了
                      userId: that.schoolNum,
                      userName: that.realName
                  }, function(res) {
                      if(res.data == 0) {    // 这一步显然没有进行
                        wepy.switchTab({
                            url:'/pages/me'
                        })
                      } else if (res.data == 'duplicate') {
                          wepy.showModal({
                            title: '提示',
                            content: '学号/工号重复，请重新输入'
                        })
                        // 返回“重复”时不应当进行缓存
                      } else if (res.data == 'success'){
                          wx.showModal({
                            title: '绑定成功',
                            content: '你的姓名：' + that.realName + '\n你的学号：' + that.schoolNum,
                              success(sm){
                                if(sm.confirm) {
                                    console.log('用户点击确定')
                                    wx.navigateBack()
                                }
                                else{
                                    console.log('用户点击取消')

                                }
                              }

                          })

                          // 全局缓存
                          wepy.setStorageSync("schoolNum", that.schoolNum)
                          wepy.setStorageSync("realName", that.realName)
                      }
                      
                  }
              )
          } else {
              wepy.showModal({
                  title:'错误',
                  content: '学号格式输入错误'
              })
          }
      }
  }

  async onLoad(){   // 'userInfo'是腾讯授权的资料
      let that = this
      let userInfo = wepy.getStorageSync("userInfo")
      that.avatarUrl = userInfo.avatarUrl
      that.nickName = userInfo.nickName

      // 一般进到绑定学号时要求已经进行了微信授权，此时openid已经在me.wpy获取好了
      //GET /api/user/{code}
      // 根据改 code 发送get请求查看数据库中是否已经绑定了学号，如果没有，则可以让学生点击“绑定”按钮bind 发送post绑定 /api/user
      let openId = wepy.getStorageSync("openid")
      that.openId = openId
      console.log("进入bindschoolNum页面！您的openid为" + openId)
  }

}
</script>